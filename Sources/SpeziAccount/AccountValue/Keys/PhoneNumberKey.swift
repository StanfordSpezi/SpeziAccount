//
// This source file is part of the Stanford Spezi open-source project
//
// SPDX-FileCopyrightText: 2023 Stanford University and the project authors (see CONTRIBUTORS.md)
//
// SPDX-License-Identifier: MIT
//

import Foundation
import SpeziFoundation
import SpeziValidation
import SwiftUI


private struct EntryView: DataEntryView {
    @Binding private var phoneNumber: String
    
    
    var body: some View {
        PhoneNumberEntryView(phoneNumber: $phoneNumber)
    }
    

    init(_ value: Binding<String>) {
        self._phoneNumber = value
    }
}


extension AccountDetails {
#if compiler(<6)
    // In older compilers, we get a circular reference error when trying to add an extension (see end of file) to a type that is generated by a macro
    // Therefore, we manually expand the macro for older versions of the compiler.

    public struct __Key_phoneNumber: AccountKey { // swiftlint:disable:this type_name
        public typealias Value = String

        public static let name = LocalizedStringResource("PHONE_NUMBER", bundle: .atURL(from: .module))
        public static let identifier = "phoneNumber"
        public static let category: AccountKeyCategory = .contactDetails
        public struct DataEntry: DataEntryView {
            @Binding private var value: Value

            public var body: some View {
                EntryView($value)
            }

            public init(_ value: Binding<Value>) {
                self._value = value
            }
        }
    }
#endif

#if compiler(>=6)
    /// The phone number of a user.
    @AccountKey(
        name: LocalizedStringResource("PHONE_NUMBER", bundle: .atURL(from: .module)),
        category: .contactDetails,
        as: String.self,
        entryView: EntryView.self
    )
    public var phoneNumber: String?
#else
    /// The phone number of a user.
    public var phoneNumber: String? {
        get {
            self [__Key_phoneNumber.self]
        }
        set {
            self [__Key_phoneNumber.self] = newValue
        }
    }
#endif
}


@KeyEntry(\.phoneNumber)
public extension AccountKeys {} // swiftlint:disable:this no_extension_access_modifier


extension AccountServiceConfigurationStorage {
    /// Add phone number validation rules to the configuration.
    ///
    /// - Parameter validationRules: The validation rules to apply to the phone number field.
    /// - Returns: The updated configuration.
    public func phoneNumberValidation(_ validationRules: ValidationRule...) -> Self {
        var copy = self
        copy[FieldValidationRules<AccountDetails.__Key_phoneNumber>.self] = FieldValidationRules(
            for: AccountKeys.phoneNumber,
            rules: validationRules
        )
        return copy
    }
}


extension FieldValidationRules where Key == AccountDetails.__Key_phoneNumber {
    public static func compute(from repository: AccountServiceConfigurationStorage) -> FieldValidationRules<Key>? {
        if let value = repository.get(Self.self) {
            return value // return user-configured validation rules
        }
        
        // Default phone number validation
        return FieldValidationRules(for: Key.self, rules: .nonEmpty.intercepting, .phoneNumber)
    }
}


extension ValidationRule {
    /// A validation rule that checks if a phone number is valid.
    public static let phoneNumber: ValidationRule = {
           guard let regex = try? Regex("^\\+[1-9]\\d{1,14}$") else {
               fatalError("Failed to build the phone number validation rule!")
           }

           return ValidationRule(
               regex: regex,
               message: "VALIDATION_PHONE_NUMBER",
               bundle: .module
           )
    }()
}
